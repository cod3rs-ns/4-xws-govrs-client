//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.12 at 01:04:06 AM CET 
//


package rs.acs.uns.sw.govrs.client.fx.serverdomain;

import javafx.beans.property.ObjectProperty;
import javafx.beans.property.SimpleObjectProperty;
import javafx.beans.property.SimpleStringProperty;
import javafx.beans.property.StringProperty;
import rs.acs.uns.sw.govrs.client.fx.domain.Element;
import rs.acs.uns.sw.govrs.client.fx.editor.property_sheet.PartEnumPropertyItem;
import rs.acs.uns.sw.govrs.client.fx.editor.property_sheet.StringPropertyItem;
import rs.acs.uns.sw.govrs.client.fx.serverdomain.adapters.PartEnumPropertyAdapter;
import rs.acs.uns.sw.govrs.client.fx.serverdomain.adapters.StringPropertyAdapter;
import rs.acs.uns.sw.govrs.client.fx.serverdomain.enums.PartRoles;
import rs.acs.uns.sw.govrs.client.fx.util.ElementType;
import rs.acs.uns.sw.govrs.client.fx.util.IdentityGenerator;
import rs.acs.uns.sw.govrs.client.fx.validation.ErrorMessage;

import javax.xml.bind.annotation.*;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import java.util.ArrayList;
import java.util.List;


/**
 * <p>Java class for glava element declaration.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;element name="glava">
 *   &lt;complexType>
 *     &lt;complexContent>
 *       &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *         &lt;sequence>
 *           &lt;element ref="{http://www.parlament.gov.rs/schema/elementi}odjeljak" maxOccurs="unbounded"/>
 *         &lt;/sequence>
 *         &lt;attGroup ref="{http://www.parlament.gov.rs/schema/elementi}standard_attrs"/>
 *         &lt;attribute name="role">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;enumeration value="uvodne_odredbe"/>
 *               &lt;enumeration value="zavrsne_odredbe"/>
 *               &lt;enumeration value="opste_odredbe"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/attribute>
 *       &lt;/restriction>
 *     &lt;/complexContent>
 *   &lt;/complexType>
 * &lt;/element>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "odjeljak"
})
@XmlRootElement(name = "glava", namespace = "http://www.parlament.gov.rs/schema/elementi")
public class Part extends Element{

    @XmlElement(namespace = "http://www.parlament.gov.rs/schema/elementi", required = true)
    protected List<Section> odjeljak;


    @XmlAttribute(name = "role")
    @XmlJavaTypeAdapter(PartEnumPropertyAdapter.class)
    protected ObjectProperty<PartRoles> role = new SimpleObjectProperty<>();

    @XmlAttribute(name = "id", required = true)
    @XmlSchemaType(name = "anyURI")
    @XmlJavaTypeAdapter(StringPropertyAdapter.class)
    protected StringProperty id = new SimpleStringProperty();

    @XmlAttribute(name = "name")
    @XmlJavaTypeAdapter(StringPropertyAdapter.class)
    protected StringProperty name = new SimpleStringProperty("Glava");

    /**
     * Gets the value of the odjeljak property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the odjeljak property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOdjeljak().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Section }
     * 
     * 
     */
    public List<Section> getOdjeljak() {
        if (odjeljak == null) {
            odjeljak = new ArrayList<Section>();
        }
        return this.odjeljak;
    }

    /**
     * Gets the value of the role property.
     *
     * @return possible object is
     * {@link String }
     */
    public String getRole() {
        if (this.role.get() == PartRoles.UvodneOdredbe) {
            return "uvodne_odredbe";
        }

        if (this.role.get() == PartRoles.OpsteOdredbe) {
            return "opste_odredbe";
        }

        if (this.role.get() == PartRoles.ZavrsneOdredbe) {
            return "zavrsne_odredbe";
        }
        return "";
    }

    /**
     * Sets the value of the role property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setRole(String value) {
        if (value.equals("uvodne_odredbe")) {
            this.role.set(PartRoles.UvodneOdredbe);
        }
        if (value.equals("opste_odredbe")) {
            this.role.set(PartRoles.OpsteOdredbe);
        }
        if (value.equals("zavrsne_odredbe")) {
            this.role.set(PartRoles.ZavrsneOdredbe);
        }
    }

    public ObjectProperty<PartRoles> roleProperty() {
        return this.role;
    }

    /**
     * Gets the value of the id property.
     *
     * @return possible object is
     * {@link String }
     */
    public String getId() {
        return id.get();
    }

    /**
     * Sets the value of the id property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setId(String value) {
        this.id.set(value);
    }

    public StringProperty idProperty() {
        return this.id;
    }

    /**
     * Gets the value of the name property.
     *
     * @return possible object is
     * {@link String }
     */
    public String getElementName() {
        return name.get();
    }

    /**
     * Sets the value of the name property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setElementName(String value) {
        this.name.setValue(value);
    }

    public StringProperty elementNameProperty() {
        return this.name;
    }


    public String getName() {
        return name.get();
    }

    public void setName(String value) {
        this.name.set(value);
    }


    @Override
    public void initElement() {
        for (Element e : getOdjeljak()) {
            getChildren().add(e);
        }

        // init observable list for all children
        for (Element e : getChildren()) {
            e.setElementParent(this);
            e.initElement();
        }

        createPropertyAttrs();
    }

    @Override
    public void createAndAddChild(Element element) {
        if (element instanceof Section) {
            Section s = (Section) element;
            s.idProperty().set(IdentityGenerator.get().generate(this, ElementType.Section));
            s.setElementParent(this);
            s.createPropertyAttrs();
            getOdjeljak().add(s);
            getChildren().add(s);
        }
    }

    @Override
    public void removeChild(Element element) {
        if (element instanceof Section) {
            Section s = (Section) element;
            getOdjeljak().remove(s);
            getChildren().remove(s);
        }
    }

    @Override
    public void createPropertyAttrs() {
        // create property list for context
        StringPropertyItem idPropertyItem = new StringPropertyItem(
                idProperty(),
                "Generalno",
                "ID ",
                "Jedinstveni identifikator",
                false);
        StringPropertyItem namePropertyItem = new StringPropertyItem(
                elementNameProperty(),
                "Generalno",
                "Naziv",
                "Naziv elementa",
                true);
        PartEnumPropertyItem partRolesPropertyItem = new PartEnumPropertyItem(
                roleProperty(),
                "Dodatno",
                "Vrsta",
                "Vrsta odredbe",
                true);
        getPropertyItems().add(idPropertyItem);
        getPropertyItems().add(namePropertyItem);
        getPropertyItems().add(partRolesPropertyItem);
    }

    @Override
    public void preMarshaller() {
        for (Element child: getChildren()) {
            child.preMarshaller();
        }
    }

    @Override
    public void validate(List<ErrorMessage> errorMessageList) {
        if (name.get() == null || "".equals(name.get()))
            errorMessageList.add(new ErrorMessage(id.get(), name.getName(), ElementType.Part, "Ime glave je obavezno."));
        if (getChildren().size() == 0)
            errorMessageList.add(new ErrorMessage(id.get(), name.getName(), ElementType.Part, "Glava ne mo≈æe biti prazna."));

        // validate children elements
        for(Element child: getChildren()){
            child.validate(errorMessageList);
        }
    }
}
